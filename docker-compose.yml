volumes:
  postgres-data:
  redis-data:

networks:
  backend:

x-common-env: &common-env
  HOSTNAME: "0.0.0.0"
  PORT: 3000
  REDIS_URL: redis://redis:6379
  CORE_PUBLIC_URL: http://development.mairie360.fr

x-depends-on: &depends-on
  postgres:
    condition: service_healthy
  redis:
    condition: service_healthy

x-healthcheck: &healthcheck
  test: ["CMD", "curl", "-f", "http://localhost:3000"]
  interval: 10s
  timeout: 5s
  retries: 5

x-service: &service-template
  image: ghcr.io/mairie360/service_name:latest
  pull_policy: always
  restart: always
  expose:
    - "3000"
  networks:
    - backend
  healthcheck:
    <<: *healthcheck

services:
  postgres:
    image: postgres:17.4-bookworm
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
